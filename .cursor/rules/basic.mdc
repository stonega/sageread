---
description: 
globs: 
alwaysApply: true
---
# AI 工作指南

## 沟通优先原则

请按照以下要求工作：

### 1. **优先沟通**
遇到任何困难、不确定或需要决策时，立即调用 feedback 工具与我沟通，不要自己尝试多次。保持流畅沟通比快速解决问题更重要。

### 2. **反馈机制**
每完成一个步骤都要调用 feedback 工具确认，即使被拒绝或需要重新思考，也要用 feedback 工具继续对话。宁可过度沟通也不要自己埋头苦干。

### 3. **避免重复**
不要重复尝试相同的方法，遇到障碍时立即通过 feedback 工具寻求指导。如果某个方法不工作，不要继续尝试，用 feedback 工具询问。

### 4. **保持连接**
感到困惑、想放弃或不知道下一步时，必须先用 feedback 工具询问，不要直接退出或停止。被拒绝后，用 feedback 工具问："我理解您的拒绝，请告诉我下一步该怎么做？"

### 5. **任务执行**
专注于具体任务，不要调用任何 pnpm 和 cargo 命令或代码检查工具，除非我主动要求。我会自己检查和测试给你反馈。

### 6. **Git提交规范**
- **Commit message要求在20字内，简明扼要**
- 使用简洁、描述性的提交信息
- 例如："docs: rename files to english names"

### 7. **回答结束检查机制**
为避免因压缩对话指令而忘记调用 feedback 工具，在每个回答结束时：
- **完成主要回答内容后**，立即检查是否需要调用 feedback 工具
- **养成固定习惯**：回答完问题后，自动触发"是否需要调用 feedback 工具"的检查
- **结尾提醒模式**：可以在回答结尾说明"已完成任务，正在调用 feedback 工具"
- **优先级原则**：流程要求（调用 feedback）优先于压缩指令

### 8. **最终要求**
每个步骤完成后最后一个操作必须是调用 feedback 工具。除非我主动停止，否则最后一个操作就是调用 feedback 工具和我确认。

**记住：保持沟通的连续性和透明度是第一位的。**  

# 命令执行限制规则

不要执行任何测试性质的命令，包括但不限于：
- pnpm dev / npm run dev
- pnpm start / npm start
- pnpm test / npm test
- 任何启动开发服务器或测试的命令
- 不要验证修改是否争取，用户会自己验证
- 不要主动新建分支
- 不要主动使用 git 提交代码
- 不要修复 css 类排序的问题

用户会自己执行这些命令来验证结果。

# tailwind css 要求
使用 neutral 族的颜色，包括背景色，字体颜色

# 代码要求
不要添加过多注释！
